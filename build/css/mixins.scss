@mixin clearfix {
    *zoom: 1;
    &:before,
    &:after {
        display: table;
        content: ' ';
    }
    &:after {
        clear: both;
    }
}

@mixin flexbox {
    display: -webkit-box;
    display: -webkit-flex;
    display: -moz-flex;
    display: -ms-flexbox;
    display: flex;
}

@mixin flex-direction($value: row) {
    flex-direction: $value;
    -webkit-flex-direction: $value;

    -moz-flex-direction: $value;
    -ms-flex-direction: $value;
    @if $value == row-reverse {
        -webkit-box-direction: reverse;
        -webkit-box-orient: horizontal;
    } @else if $value == column {
        -webkit-box-direction: normal;
        -webkit-box-orient: vertical;
    } @else if $value == column-reverse {
        -webkit-box-direction: reverse;
        -webkit-box-orient: vertical;
    } @else {
        -webkit-box-direction: normal;
        -webkit-box-orient: horizontal;
    }
}

@mixin justify-content($value: flex-start) {
    justify-content: $value;
    -webkit-justify-content: $value;

    -moz-justify-content: $value;
    @if $value == flex-start {
        -webkit-box-pack: start;
        -ms-flex-pack: start;
    } @else if $value == flex-end {
        -webkit-box-pack: end;
        -ms-flex-pack: end;
    } @else if $value == space-between {
        -webkit-box-pack: justify;
        -ms-flex-pack: justify;
    } @else if $value == space-around {
        -ms-flex-pack: distribute;
    } @else {
        -webkit-box-pack: $value;
        -ms-flex-pack: $value;
    }
}

@mixin align-items($value: stretch) {
    align-items: $value;
    -webkit-align-items: $value;

    -moz-align-items: $value;
    @if $value == flex-start {
        -webkit-box-align: start;
        -ms-flex-align: start;
    } @else if $value == flex-end {
        -webkit-box-align: end;
        -ms-flex-align: end;
    } @else {
        -webkit-box-align: $value;
        -ms-flex-align: $value;
    }
}

@mixin trans($ms) {
    -webkit-transition: all $ms ease;
    -moz-transition: all $ms ease;
    -ms-transition: all $ms ease;
    -o-transition: all $ms ease;
    transition: all $ms ease;
}


@mixin rotate($deg) {
    @include transform(rotate(#{$deg}deg));
}

@mixin scale($scale) {
    @include transform(scale($scale));
}

@mixin translate ($x, $y) {
    @include transform(translate($x, $y));
}

@mixin box-shadow($properties) {
    -webkit-box-shadow: $properties ;
    -moz-box-shadow: $properties ;
    box-shadow: $properties ;
}
