// Mixins

@mixin clearfix {
    *zoom: 1;
    &:before,
    &:after {
        display: table;
        content: ' ';
    }
    &:after {
        clear: both;
    }
}

@mixin flexbox {
    display: -webkit-box;
    display: -webkit-flex;
    display: -moz-flex;
    display: -ms-flexbox;
    display: flex;
}

@mixin flex-direction($value: row) {
    flex-direction: $value;
    -webkit-flex-direction: $value;

    -moz-flex-direction: $value;
    -ms-flex-direction: $value;
    @if $value == row-reverse {
        -webkit-box-direction: reverse;
        -webkit-box-orient: horizontal;
    } @else if $value == column {
        -webkit-box-direction: normal;
        -webkit-box-orient: vertical;
    } @else if $value == column-reverse {
        -webkit-box-direction: reverse;
        -webkit-box-orient: vertical;
    } @else {
        -webkit-box-direction: normal;
        -webkit-box-orient: horizontal;
    }
}

@mixin justify-content($value: flex-start) {
    justify-content: $value;
    -webkit-justify-content: $value;

    -moz-justify-content: $value;
    @if $value == flex-start {
        -webkit-box-pack: start;
        -ms-flex-pack: start;
    } @else if $value == flex-end {
        -webkit-box-pack: end;
        -ms-flex-pack: end;
    } @else if $value == space-between {
        -webkit-box-pack: justify;
        -ms-flex-pack: justify;
    } @else if $value == space-around {
        -ms-flex-pack: distribute;
    } @else {
        -webkit-box-pack: $value;
        -ms-flex-pack: $value;
    }
}

@mixin align-items($value: stretch) {
    align-items: $value;
    -webkit-align-items: $value;

    -moz-align-items: $value;
    @if $value == flex-start {
        -webkit-box-align: start;
        -ms-flex-align: start;
    } @else if $value == flex-end {
        -webkit-box-align: end;
        -ms-flex-align: end;
    } @else {
        -webkit-box-align: $value;
        -ms-flex-align: $value;
    }
}

@mixin trans($ms) {
    -webkit-transition: all $ms ease;
    -moz-transition: all $ms ease;
    -ms-transition: all $ms ease;
    -o-transition: all $ms ease;
    transition: all $ms ease;
}


@mixin rotate($deg) {
    @include transform(rotate(#{$deg}deg));
}

@mixin scale($scale) {
    @include transform(scale($scale));
}

@mixin translate ($x, $y) {
    @include transform(translate($x, $y));
}

@mixin box-shadow($properties) {
    -webkit-box-shadow: $properties ;
    -moz-box-shadow: $properties ;
    box-shadow: $properties ;
}

// Vars

$flickr_black : #151517f2;
$flickr_grey  : #f3f5f6;

// Styles

.row {
	max-width: 1200px;
}

.header {
	background-color: $flickr_grey;
	margin-bottom: 5vh;
	&.fixed {
		position: fixed;
		width: 100%;
		z-index: 9;
		.main_header {
			padding: 2vh 0;
			@include flex-direction(row);
			.header_inner {
				h1 {
					font-size: 3rem;
					@include trans(0.2s);
				}
			}
		}
	}
}

.select2-container {
	max-width: 100%;
	width: 100%;
}

.photos_wrapper {
	margin-top: 7vh;
	min-height: 2vh;
}

.main_header_section {
	@include box-shadow(0px 1px 5px 0px $flickr_black);
}

.main_header {
	padding: 2vh 0 5vh 0;
	@include flex-direction(column);
	@include align-items(center);
	.header_inner {
		position: relative;
		padding-left: 1rem;
		h1 {
			position: relative;
			font-size: 4rem;
			line-height: 1;
			max-height: 50px;
			margin: 0;
			top: 8px;
		}
	}
	@include flexbox;
}

.flickr-img-wrapper {
    margin-bottom: 3vh;
	@include flexbox;
	@include flex-direction(column);
	@include justify-content(center);
	@include align-items(center);
	img {
		@include box-shadow(0px 0px 10px 0px $flickr_black);
	}
}

.searchbar {
	position: relative;
}

.search_wrapper {
	@include trans(0.2s);
	&.fixed {
		position: fixed;
		top: 10vh;
		z-index: 9;
		margin: 1vh auto 0 auto;
		left: 0;
		right: 0;
	}
}
